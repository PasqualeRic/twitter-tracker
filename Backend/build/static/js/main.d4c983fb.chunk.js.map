{"version":3,"sources":["components/CustomAutocomplete.js","components/FieldStyles.js","components/DateStyles.js","components/Commands.js","components/Graph.js","App.js","reportWebVitals.js","index.js"],"names":["CustomAutocomplete","withStyles","root","width","tag","backgroundColor","height","position","zIndex","color","groupLabel","inputFocused","popupIndicator","listbox","Autocomplete","fieldStyles","makeStyles","border","boxShadow","dateStyles","borderColor","commands","name","graphStyle","Graph","style","Paper","className","data","country","area","valueField","argumentField","text","App","useState","Date","value","setValue","setText","tags","setTags","tabvalue","setTabValue","classes","date","a","console","log","toSend","options","method","mode","headers","body","JSON","stringify","fetch","then","response","json","catch","error","CssBaseline","AppBar","borderRadius","Toolbar","id","Typography","variant","href","multiple","getOptionLabel","option","onChange","event","renderInput","params","TextField","label","target","margin","fullWidth","Button","size","sx","onClick","endIcon","TabContext","Box","Tabs","val","textColor","indicatorColor","Tab","TabPanel","fontStyle","LocalizationProvider","dateAdapter","AdapterDateFns","newValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4c983fb.chunk.js","sourcesContent":["import React from 'react';\nimport {Autocomplete} from '@mui/material';\nimport {withStyles}  from \"@material-ui/core/styles\";\n\n\n\nconst CustomAutocomplete = withStyles({\n  root :{\n    width: '100%'\n  },\n  tag: {\n    backgroundColor: \"#a0a\",\n     height: 24,\n     position: \"relative\",\n     zIndex: 0,\n     \"& .MuiChip-label\": {\n      color: 'purple'\n     },\n     \"& .MuiChip-deleteIcon .MuiSvgIcon-root\": {\n        color: \"purple\",\n     }\n   },\ngroupLabel: {\n  color: 'white'\n},\ninputFocused: {\n  color: 'white'\n},\npopupIndicator: {\n  color: 'white'\n},\nlistbox: {\n  color: 'purple'\n},\n\n})(Autocomplete);\n\n\nexport default CustomAutocomplete;\n","import React from 'react';\nimport {makeStyles}  from \"@material-ui/core/styles\";\n\nconst fieldStyles= makeStyles({\n  root: {\n    \"& .MuiOutlinedInput-input\": {\n      color: \"purple\"\n    },\n    \"& .MuiInputLabel-root\": {\n      color: \"purple\"\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      border: \"2px solid purple\",\n       boxShadow: '1px 1px 7px 2px purple'\n    },\n    \"&:hover .MuiOutlinedInput-input\": {\n      color: \"purple\"\n    },\n    \"&:hover .MuiInputLabel-root\": {\n      color: \"purple\"\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n        border: \"2px solid purple\",\n         boxShadow: '1px 1px 7px 2px purple'\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n      color: \"purple\"\n    },\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: \"purple\"\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      border: \"2px solid purple\",\n       boxShadow: '1px 1px 7px 2px purple'\n    },\n    '& .MuiSvgIcon-root':{\n      color: 'purple'\n    }\n  }\n})\n\n\n\nexport default fieldStyles;\n","import React from 'react';\nimport {makeStyles}  from \"@material-ui/core/styles\";\n\n\n\nconst dateStyles = makeStyles({\n  root: {\n  '& .MuiSvgIcon-root':{\n    color: 'purple'\n  },\n  '& .MuiOutlinedInput-input':{\n      color: 'purple',\n      borderColor: 'purple'\n  },\n  '& .MuiInputLabel-root':{\n    color: 'purple',\n\n  },\n  '& .MuiFormControl-root':{\n    borderColor: 'purple'\n  },\n  '& .MuiOutlinedInput-notchedOutline ':{\n    borderColor: 'purple',\n\n  },\n  '&:hover .MuiOutlinedInput-notchedOutline .MuiOutlinedInput-root':{\n    borderColor: 'purple'\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    color: \"purple\"\n  },\n  \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n    borderColor: \"purple\",\n  },\n    }\n})\n\n\nexport default dateStyles;\n","import React from 'react';\n\n\n\nexport const commands = [\n  { name: '#' },\n  { name: 'user' }\n];\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Chart,\n  PieSeries,\n  Title,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\n\nimport {makeStyles}  from \"@material-ui/core/styles\";\n\n\n\nlet graphStyle = makeStyles({\n  root: {\n  backgroundColor: 'rgba(236, 233, 166, 1)'\n}\n})\n\nfunction Graph(){\n\nlet style = graphStyle();\n\n  const data = [\n    { country: 'Russia', area: 12 },\n    { country: 'Canada', area: 7 },\n    { country: 'USA', area: 7 },\n    { country: 'China', area: 7 },\n    { country: 'Brazil', area: 6 },\n    { country: 'Australia', area: 5 },\n    { country: 'India', area: 2 },\n    { country: 'Others', area: 55 },\n  ];\n\n    return (\n      <Paper className={style.root}>\n        <Chart\n          data={data}\n        >\n          <PieSeries\n            valueField=\"area\"\n            argumentField=\"country\"\n          />\n          <Title\n            text=\"Area of Countries\"\n          />\n          <Animation />\n        </Chart>\n      </Paper>\n    );\n}\n\n\nexport default Graph;\n","import {React , useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Toolbar, CssBaseline,  AppBar, Typography, TextField, Tab, Box, Tabs, Button} from '@mui/material';\nimport CustomAutocomplete from './components/CustomAutocomplete';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\nimport {TabContext, TabList, TabPanel} from '@mui/lab/';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DateTimePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport fieldStyles  from './components/FieldStyles';\nimport dateStyles from './components/DateStyles';\nimport { commands } from './components/Commands';\nimport Graph from './components/Graph';\nimport './App.css';\n\n\nfunction App() {\n\nconst [selectedCommand, setSelectedCommand] = useState(null);\nconst [value, setValue] = useState(new Date());\nconst [text, setText] = useState('');\nconst [tags, setTags] = useState([]);\n\nconst [tabvalue, setTabValue] = useState('one');\n\nlet classes = fieldStyles();\nlet date = dateStyles();\n\n async function submit()\n{\n  console.log('tag inseriti', tags[0].name);\n  console.log(\"testo inserito\",text);\n  if(tags[0].name === '#')\n  {\n    console.log(\"sono dentro !\")\n    const toSend = `{\n      \"nomeHashtag\": \"${text}\"\n    }`;\n    console.log(\"toSend :\" , toSend);\n    const options = {\n       // Creiamo il payload da mandare al server\n         method: 'POST',\n          mode: \"no-cors\",\n         headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(toSend),\n       };\n       console.log(\"options.body :\", options.body);\n await fetch('http://localhost:8001/getTweetsByHashtag', options)\n    .then(response => response.json())\n    .then(data => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n  console.error('Error:', error);\n});\n  }\n\n  // fetch('http://localhost:8000/getTweetsByHashtag', parametri da passare)\n  // .then(gestisco la risposta di node e quindi renderizzo le cose in output)\n}\n\n\n  return (\n  <div className=\"App\">\n    <CssBaseline />\n      {/*Navbar*/}\n    <AppBar position=\"relative\" style={{ color:'purple',backgroundColor: 'rgba(236, 233, 166, 1)', border: '2px solid purple', borderRadius: '0.5rem',   boxShadow: '1px 1px 7px 2px purple'}} >\n      <Toolbar id=\"toolbar\">\n        <AnalyticsIcon />\n          <Typography  variant=\"h4\">\n          Twitter <span className=\"blink\">Tracker</span>\n          </Typography>\n          <a href=\"https://twitter.com/home\"><TwitterIcon /></a>\n      </Toolbar>\n    </AppBar>\n    {/*div per il main content*/}\n    <div className=\"main\">\n    {/*div a sinistra*/}\n      <div className=\"left\">\n{/*primo div dentro il div a sinistra*/}\n\n   <div className=\"queryBar\">\n      {/*query bar */}\n      <CustomAutocomplete\n          multiple\n          id=\"Commands\"\n          options={commands}\n          getOptionLabel={option => option.name}\n          onChange={((event, value) =>{\n            setTags(value);\n          })}\n          renderInput={params => (\n            <TextField\n              {...params}\n              value={text}\n               className={classes.root}\n              label='#Make a query'\n\n              onChange={((event) =>{\n                setText(event.target.value);\n              })}\n              margin=\"normal\"\n              fullWidth\n            />\n          )}\n   />\n\n   <Button variant=\"contained\"  size='small' color='secondary' sx={{\n     height: '2.2rem'\n   }} onClick={submit} endIcon={<SearchIcon />}>\n  Search\n</Button>\n\n\n\n   </div>\n  {/*secondo div nel div a sinista con la dashboard e i tweets   */}\n   <div className=\"dashboard\">\n {/* Tabs contenenti tweets e dashboard  */}\n\n<TabContext value={tabvalue}>\n   <Box sx={{ width: '100%' }}>\n      <Tabs\n        value={tabvalue}\n        onChange={(event, val) => {\n          setTabValue(val);\n        }}\n        textColor=\"secondary\"\n        indicatorColor=\"secondary\"\n        aria-label=\"secondary tabs example\"\n      >\n        <Tab value=\"one\" label=\"Tweets\" href=\"#tweets\"  id=\"dio\" />\n        <Tab value=\"two\" label=\"Dashboard\" id=\"dio\" href=\"#dashboard\"  />\n      </Tabs>\n      <TabPanel value='one'>\n      <section>\n          <div id=\"tweets\">\n          Tweet di prova !\n\n           </div>\n           </section>\n        </TabPanel>\n        <TabPanel value='two'>\n        <section>\n            <div id=\"dashboard\">\n            <Graph />\n             </div>\n             </section>\n          </TabPanel>\n    </Box>\n    </TabContext>\n   </div>\n</div>\n\n{/* div a destra contenente il date picker */}\n      <div className=\"right\">\n      <h4 style={{fontStyle: 'italic'}}>\"A long time ago ...\" </h4>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n\n          label=\"Tweets since\"\n          value={value}\n          onChange={(newValue) => {\n            setValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} className={date.root}/>}\n        />\n      </LocalizationProvider>      </div>\n\n    </div>\n\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}